[{"path":"https://bowmanr.github.io/scDNA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bobby Bowman. Author, maintainer.           bowman_rl","code":""},{"path":"https://bowmanr.github.io/scDNA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bowman B (2024). scDNA: Analyzing single cell DNA sequencing data. R package version 1.1, https://bowmanr.github.io/scDNA/.","code":"@Manual{,   title = {scDNA: Analyzing single cell DNA sequencing data},   author = {Bobby Bowman},   year = {2024},   note = {R package version 1.1},   url = {https://bowmanr.github.io/scDNA/}, }"},{"path":"https://bowmanr.github.io/scDNA/index.html","id":"scdna-v11","dir":"","previous_headings":"","what":"Analyzing single cell DNA sequencing data","title":"Analyzing single cell DNA sequencing data","text":"goal scDNA R package provide simple framework analyzing single cell DNA sequencing data. current version primarily focuses processing variant information Mission Bio Tapestri platform. Functionality includes import h5 files Tapestri pipeline, basic variant annotation, genotype extraction, clone identification, clonal trajectory inference. package provides wrappers normalizing protein data scDNA+Protein libraries downstream analysis.","code":""},{"path":"https://bowmanr.github.io/scDNA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing single cell DNA sequencing data","text":"can install (re-install) current version (1.1) scDNA package best suited R >=V4.3.1 function standard workstations. Typical install time less 5 minutes. Average run time beginning end analysis vary sample size exceed 30 minutes.","code":"remotes::install_github(\"bowmanr/scDNA\",force=TRUE)"},{"path":[]},{"path":"https://bowmanr.github.io/scDNA/index.html","id":"v11","dir":"","previous_headings":"Version Updates","what":"v1.1","title":"Analyzing single cell DNA sequencing data","text":"Version 1.1 finally exciting new developments: - New sequencing panels variant annotation introduced: - hg38 - mm10 - New plotting functions RL trajectories. - new interactive plots, - BSCITE-style implementation. - Demultiplexing samples introduced - (integrated adapted Robinson et al, github) - vignette included demonstrate perform . - Cell confidence labeling based DNA Protein data. - Outlier scores introduced cell confidence. - Stain index introduced cell confidence. - Copy number variation (CNV) Ploidy analysis introduced. - Allele dropout assessment introduced.","code":""},{"path":"https://bowmanr.github.io/scDNA/index.html","id":"v101","dir":"","previous_headings":"Version Updates","what":"v1.0.1","title":"Analyzing single cell DNA sequencing data","text":"H5 files now read using rhdf5 package stored SingleCellExperiment container. Merged h5 samples identified sample names stored colData(). Variant identification ran separately merged. Variant information stored rowData() NGT matrix, clonal abundance, clone architecture familiar previous versions can found metadata. Variant identification annotation performed initially reading genotyping/QC data. Transcript annotation matches cannonical transcripts used cBio portal. decrease variant location identification runtime, created custom TxDB object Clonal Evolution Panel used . different panel can also use TxDB hg19 UCSC. Future versions local data panels Mission Bio, well simple script generating TxDB object custom panels. Protein data stored altExp() container within container. Wrappers DSB CLR normalization provided. (CLR currently performed Seurat). Simple import Seurat demonstrated. Export FCS files mutations clone “completeness” provided variables.","code":""},{"path":"https://bowmanr.github.io/scDNA/index.html","id":"simple-workflow","dir":"","previous_headings":"","what":"Simple workflow","title":"Analyzing single cell DNA sequencing data","text":"Identify variants within sample. Identify mutations genes interest. Read data, enumerate clones, compute statistics. Sample statistics mirror seen Figure 1 , stored metadata. Simple function producing graph style Figure 1D ,  Function perform Reinforcment Learning / MDP approach clonal trajectory Figure 3 , Methods protein normalization. dsb CLR normalization can performed stored separate slots. tend favor dsb far.","code":"library(scDNA) library(dplyr) sample_file<- \"test_file.h5\" variant_output<-variant_ID(file=sample_file,                            panel=\"MSK_RL\", # \"UCSC\" can be used for other panels                            GT_cutoff=0,  # mimimum percent of cells where a successful genotyping call was made                            VAF_cutoff=0) # mimimum variant allele frequency genes_of_interest <- c(\"IDH2\",\"NRAS\",\"NPM1\",\"TET2\",\"FLT3\",\"IDH1\") variants_of_interest<-variant_output%>%                           dplyr::filter(Class==\"Exon\")%>%                           dplyr::filter(VAF>0.01)%>%                           dplyr::filter(genotyping_rate>85)%>%                           dplyr::filter(!is.na(CONSEQUENCE)&CONSEQUENCE!=\"synonymous\")%>%                           dplyr::filter(SYMBOL%in%genes_of_interest)%>%                              dplyr::arrange(desc(VAF))%>%                           dplyr::slice(c(1:3)) # take the 3 most abundance mutations sce<-tapestri_h5_to_sce(file=sample_file,variant_set = variants_of_interest) sce<-enumerate_clones(sce) sce<-compute_clone_statistics(sce,skip_ploidy=FALSE) clonograph(sce) sce<-trajectory_analysis(sce,use_ADO=TRUE) droplet_metadata<- extract_droplet_size(sce) background_droplets<-droplet_metadata%>%                           dplyr::filter(Droplet_type==\"Empty\")%>%                           dplyr::filter(dna_size<1.5&dna_size>0.15)%>%                           pull(Cell)  sce<-normalize_protein_data(sce=sce,                              metadata=droplet_metadata,                              method=c(\"dsb\",\"CLR\"),                              detect_IgG=TRUE,                              background_droplets=background_droplets)"},{"path":"https://bowmanr.github.io/scDNA/index.html","id":"developments-in-progress","dir":"","previous_headings":"Simple workflow","what":"Developments in progress:","title":"Analyzing single cell DNA sequencing data","text":"Cohort summarization Creating custom TxDB objects","code":""},{"path":"https://bowmanr.github.io/scDNA/index.html","id":"ongoing-investigation","dir":"","previous_headings":"Simple workflow","what":"Ongoing investigation:","title":"Analyzing single cell DNA sequencing data","text":"Doublet dead cell identification Improve cell type identification based immunophenotype Improvements MDP RL.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/BuildMDP.html","id":null,"dir":"Reference","previous_headings":"","what":"The main function builds an adjacency list of the theoretical order of mutations. The same MDP mask can be reused different mutations — BuildMDP","title":"The main function builds an adjacency list of the theoretical order of mutations. The same MDP mask can be reused different mutations — BuildMDP","text":"contains 1 main function 3 helper functions. 3 helper functions aim : turn states Ternary variables (can 0(WT), 1(Het), 2(Hom)) function finds difference states < 1 mutation away function bit logic subtraction ternary variables","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/BuildMDP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The main function builds an adjacency list of the theoretical order of mutations. The same MDP mask can be reused different mutations — BuildMDP","text":"","code":"BuildMDP(num_mutations, use_ADO = FALSE)"},{"path":"https://bowmanr.github.io/scDNA/reference/BuildMDP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The main function builds an adjacency list of the theoretical order of mutations. The same MDP mask can be reused different mutations — BuildMDP","text":"num_mutations number variants using (automatically obtained Architecture)","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/GetMembership.html","id":null,"dir":"Reference","previous_headings":"","what":"Get membership quality of cells vs empty — GetMembership","title":"Get membership quality of cells vs empty — GetMembership","text":"Get membership quality cells vs empty","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/GetMembership.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get membership quality of cells vs empty — GetMembership","text":"","code":"GetMembership(droplet_metadata)"},{"path":"https://bowmanr.github.io/scDNA/reference/GetMembership.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get membership quality of cells vs empty — GetMembership","text":"droplet_metadata","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/GetStainIndex.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Stain Index for cells — GetStainIndex","title":"Get Stain Index for cells — GetStainIndex","text":"Get Stain Index cells","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/GetStainIndex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Stain Index for cells — GetStainIndex","text":"","code":"GetStainIndex(droplet_metadata)"},{"path":"https://bowmanr.github.io/scDNA/reference/GetStainIndex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Stain Index for cells — GetStainIndex","text":"droplet_metadata","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/add_cell_annotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — add_cell_annotation","title":"Title — add_cell_annotation","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/add_cell_annotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — add_cell_annotation","text":"","code":"add_cell_annotation(sce, df)"},{"path":"https://bowmanr.github.io/scDNA/reference/add_cell_annotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — add_cell_annotation","text":"sce  df","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/annotate_variants.html","id":null,"dir":"Reference","previous_headings":"","what":"Annotate variants of interest This function takes in h5 files to extract DNA information through given TXDB files (primarily hg19) The gene names are mapped for their specific nucleotide positions. The starting and ending positions for the chromosome are listed. The consequence of the mutation such as synonymous, nonsynonymous, as well as if this is a coding region, on the exon boundry or intronic. Short amino acid changes are also labeled. The variance matrix also extracts the amplicon that the variant is found on. — annotate_variants","title":"Annotate variants of interest This function takes in h5 files to extract DNA information through given TXDB files (primarily hg19) The gene names are mapped for their specific nucleotide positions. The starting and ending positions for the chromosome are listed. The consequence of the mutation such as synonymous, nonsynonymous, as well as if this is a coding region, on the exon boundry or intronic. Short amino acid changes are also labeled. The variance matrix also extracts the amplicon that the variant is found on. — annotate_variants","text":"Annotate variants interest function takes h5 files extract DNA information given TXDB files (primarily hg19) gene names mapped specific nucleotide positions. starting ending positions chromosome listed. consequence mutation synonymous, nonsynonymous, well coding region, exon boundry intronic. Short amino acid changes also labeled. variance matrix also extracts amplicon variant found .","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/annotate_variants.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Annotate variants of interest This function takes in h5 files to extract DNA information through given TXDB files (primarily hg19) The gene names are mapped for their specific nucleotide positions. The starting and ending positions for the chromosome are listed. The consequence of the mutation such as synonymous, nonsynonymous, as well as if this is a coding region, on the exon boundry or intronic. Short amino acid changes are also labeled. The variance matrix also extracts the amplicon that the variant is found on. — annotate_variants","text":"","code":"annotate_variants(file, panel = NULL, select_variants = NULL)"},{"path":"https://bowmanr.github.io/scDNA/reference/annotate_variants.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Annotate variants of interest This function takes in h5 files to extract DNA information through given TXDB files (primarily hg19) The gene names are mapped for their specific nucleotide positions. The starting and ending positions for the chromosome are listed. The consequence of the mutation such as synonymous, nonsynonymous, as well as if this is a coding region, on the exon boundry or intronic. Short amino acid changes are also labeled. The variance matrix also extracts the amplicon that the variant is found on. — annotate_variants","text":"file path h5 file pull relevant DNA information select_variants variants interest, default variants","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/annotate_variants.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Annotate variants of interest This function takes in h5 files to extract DNA information through given TXDB files (primarily hg19) The gene names are mapped for their specific nucleotide positions. The starting and ending positions for the chromosome are listed. The consequence of the mutation such as synonymous, nonsynonymous, as well as if this is a coding region, on the exon boundry or intronic. Short amino acid changes are also labeled. The variance matrix also extracts the amplicon that the variant is found on. — annotate_variants","text":"variant annotation matrix","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/attach_weights.html","id":null,"dir":"Reference","previous_headings":"","what":"Assigns observed counts as weights to the Markov Decision Process — attach_weights","title":"Assigns observed counts as weights to the Markov Decision Process — attach_weights","text":"Assigns observed counts weights Markov Decision Process","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/attach_weights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assigns observed counts as weights to the Markov Decision Process — attach_weights","text":"","code":"attach_weights(sce, adj_linklist)"},{"path":"https://bowmanr.github.io/scDNA/reference/attach_weights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Assigns observed counts as weights to the Markov Decision Process — attach_weights","text":"sce single cell experiment object carries data adj_linklist adjacency list theoretical states describing MDP","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/cell_confidence_labeling.html","id":null,"dir":"Reference","previous_headings":"","what":"cell_confidence_labeling This function provides additional labeling to he quality of the cells based on dna and protein data. — cell_confidence_labeling","title":"cell_confidence_labeling This function provides additional labeling to he quality of the cells based on dna and protein data. — cell_confidence_labeling","text":"cell_confidence_labeling function provides additional labeling quality cells based dna protein data.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/cell_confidence_labeling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cell_confidence_labeling This function provides additional labeling to he quality of the cells based on dna and protein data. — cell_confidence_labeling","text":"","code":"cell_confidence_labeling(sce)"},{"path":"https://bowmanr.github.io/scDNA/reference/cell_confidence_labeling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cell_confidence_labeling This function provides additional labeling to he quality of the cells based on dna and protein data. — cell_confidence_labeling","text":"sce object","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/cell_confidence_labeling.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cell_confidence_labeling This function provides additional labeling to he quality of the cells based on dna and protein data. — cell_confidence_labeling","text":"sce object updated labeling colData used later","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/clonograph.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting clonographs — clonograph","title":"Plotting clonographs — clonograph","text":"Plotting clonographs","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/clonograph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting clonographs — clonograph","text":"","code":"clonograph(sce, complete_only = FALSE, color_pal = \"Reds\", QC_stats = FALSE)"},{"path":"https://bowmanr.github.io/scDNA/reference/clonograph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting clonographs — clonograph","text":"sce singleCellExperiment Object clones, NGT, architecture. complete_only logical decide whether plot complete cells also low quality cells, default=FALSE color_pal brewer.pal pallete selection. QC_stats true/false call see diagnostic plots clonograph (default=FALSE)","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/clonograph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting clonographs — clonograph","text":"clonograph figure","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/compare_VAFs.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — compare_VAFs","title":"Title — compare_VAFs","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/compare_VAFs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — compare_VAFs","text":"","code":"compare_VAFs(sce, by = NULL, variants_to_test)"},{"path":"https://bowmanr.github.io/scDNA/reference/compare_VAFs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — compare_VAFs","text":"sce   variants_to_test","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/compute_clone_statistics.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — compute_clone_statistics","title":"Title — compute_clone_statistics","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/compute_clone_statistics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — compute_clone_statistics","text":"","code":"compute_clone_statistics(sce, clone_size_cutoff = 10)"},{"path":"https://bowmanr.github.io/scDNA/reference/compute_clone_statistics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — compute_clone_statistics","text":"sce input sce object clone_size_cutoff lower 95% confidence interval cutoff clone inclusion default=10","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/demultiplex_samples.html","id":null,"dir":"Reference","previous_headings":"","what":"Demultiplex wrapper function to handle splitting samples — demultiplex_samples","title":"Demultiplex wrapper function to handle splitting samples — demultiplex_samples","text":"Demultiplex wrapper function handle splitting samples","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/demultiplex_samples.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Demultiplex wrapper function to handle splitting samples — demultiplex_samples","text":"","code":"demultiplex_samples(   sce,   sensitivity_threshold = c(0.01, 1e-04),   expected_samples = 5 )"},{"path":"https://bowmanr.github.io/scDNA/reference/demultiplex_samples.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Demultiplex wrapper function to handle splitting samples — demultiplex_samples","text":"sce SingleCellExperiment object containing Clones,Architecture, NGT matrix sensitivity_threshold vector sensitivity thresholds rows (variants) columns (cells) expected_samples number clusters samples expect","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/demultiplex_samples.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Demultiplex wrapper function to handle splitting samples — demultiplex_samples","text":"dataframe cells assigned specific cluster.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/enumerate_clones.html","id":null,"dir":"Reference","previous_headings":"","what":"Enumerate clones — enumerate_clones","title":"Enumerate clones — enumerate_clones","text":"Enumerate clones","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/enumerate_clones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Enumerate clones — enumerate_clones","text":"","code":"enumerate_clones(sce, replicates = 100)"},{"path":"https://bowmanr.github.io/scDNA/reference/enumerate_clones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Enumerate clones — enumerate_clones","text":"sce SingleCellExperiment object containing NGT matrix clone identification. replicates number bootstrapping replicates","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/enumerate_clones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Enumerate clones — enumerate_clones","text":"updated sce containing table clones, modified NGT matrix, clonal architecture.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/extract_droplet_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract protein library size, dna library size, and amplicon size for all droplets. — extract_droplet_size","title":"Extract protein library size, dna library size, and amplicon size for all droplets. — extract_droplet_size","text":"Extract protein library size, dna library size, amplicon size droplets.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/extract_droplet_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract protein library size, dna library size, and amplicon size for all droplets. — extract_droplet_size","text":"","code":"extract_droplet_size(sce)"},{"path":"https://bowmanr.github.io/scDNA/reference/extract_droplet_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract protein library size, dna library size, and amplicon size for all droplets. — extract_droplet_size","text":"sce singleCellExperiment Object file path h5 file","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/extract_droplet_size.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract protein library size, dna library size, and amplicon size for all droplets. — extract_droplet_size","text":"metadata matrix","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/fcs_export.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — fcs_export","title":"Title — fcs_export","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/fcs_export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — fcs_export","text":"","code":"fcs_export(sce, slot = \"DSB_norm\", save_path = \"~/sample_test.fcs\")"},{"path":"https://bowmanr.github.io/scDNA/reference/fcs_export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — fcs_export","text":"sce input sce object slot protein dataset use. Options DSB_norm (default), CLR_norm raw save_path path fcs file saved","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/gemerate_txdb.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — gemerate_txdb","title":"Title — gemerate_txdb","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/gemerate_txdb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — gemerate_txdb","text":"","code":"gemerate_txdb(panel_bed_path, save_path = NULL)"},{"path":"https://bowmanr.github.io/scDNA/reference/gemerate_txdb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — gemerate_txdb","text":"panel_bed_path","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/get_own_path.html","id":null,"dir":"Reference","previous_headings":"","what":"A way to navigate the MDP for any given starting root node to leaf node. — get_own_path","title":"A way to navigate the MDP for any given starting root node to leaf node. — get_own_path","text":"way navigate MDP given starting root node leaf node.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/get_own_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A way to navigate the MDP for any given starting root node to leaf node. — get_own_path","text":"","code":"get_own_path(sce, start_name, goal_name)"},{"path":"https://bowmanr.github.io/scDNA/reference/get_own_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A way to navigate the MDP for any given starting root node to leaf node. — get_own_path","text":"sce singleCellExperiment object start_name clone_code starting point. make sure less goal_name goal_name clone_code end point get . make sure larger goal_name","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/get_own_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A way to navigate the MDP for any given starting root node to leaf node. — get_own_path","text":"augments sce object Trajectories list meta data adding another path","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/impute_cluster.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — impute_cluster","title":"Title — impute_cluster","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/impute_cluster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — impute_cluster","text":"","code":"impute_cluster(sce, by = \"AF\")"},{"path":"https://bowmanr.github.io/scDNA/reference/impute_cluster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — impute_cluster","text":"sce","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/loom_to_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — loom_to_sce","title":"Title — loom_to_sce","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/loom_to_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — loom_to_sce","text":"","code":"loom_to_sce(   file,   GT_cutoff = 35,   VAF_cutoff = 5,   DP_cutoff = 10,   GQ_cutoff = 30,   AF_cutoff = 25,   variant_set = NULL )"},{"path":"https://bowmanr.github.io/scDNA/reference/loom_to_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — loom_to_sce","text":"file path h5 file GT_cutoff Fraction cells successfully genotyped initial filtering (default 0.2, meaning 20%) VAF_cutoff Fraction cells mutated initial filtering variants (default 0.005, meaning 0.05%) DP_cutoff minimum number reads necessary reliable genotype call single cell (default: 10) GQ_cutoff minimum genotype quality necessary reliable genotype call single cell (default: 30) AF_cutoff Deviation 0, 50, 100% reliable call WT, Het Hom respectively (default: 25)","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/loom_to_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Title — loom_to_sce","text":"list","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/match_clonal_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — match_clonal_graph","title":"Title — match_clonal_graph","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/match_clonal_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — match_clonal_graph","text":"","code":"match_clonal_graph(sce, given_state)"},{"path":"https://bowmanr.github.io/scDNA/reference/match_clonal_graph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — match_clonal_graph","text":"sce  given_state","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/mdp_Q_learning_with_linklist.html","id":null,"dir":"Reference","previous_headings":"","what":"This file run Reinforcement Learning (model-free Q-learning) to evaluate the most likely mutation paths from the data — mdp_Q_learning_with_linklist","title":"This file run Reinforcement Learning (model-free Q-learning) to evaluate the most likely mutation paths from the data — mdp_Q_learning_with_linklist","text":"file run Reinforcement Learning (model-free Q-learning) evaluate likely mutation paths data","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/mdp_Q_learning_with_linklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This file run Reinforcement Learning (model-free Q-learning) to evaluate the most likely mutation paths from the data — mdp_Q_learning_with_linklist","text":"","code":"mdp_Q_learning_with_linklist(df, discount, N)"},{"path":"https://bowmanr.github.io/scDNA/reference/mdp_Q_learning_with_linklist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This file run Reinforcement Learning (model-free Q-learning) to evaluate the most likely mutation paths from the data — mdp_Q_learning_with_linklist","text":"df adjacency link link discount factor determines much future mutations impact current actions. 0 looks next step, close 1 long horizon time N Number iterations, also called episodes explore MDP","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/mdp_Q_learning_with_linklist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This file run Reinforcement Learning (model-free Q-learning) to evaluate the most likely mutation paths from the data — mdp_Q_learning_with_linklist","text":"dataframe contains MDP adjacency list, normalized Q-values mutations taken","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/normalize_protein_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Protein Data — normalize_protein_data","title":"Normalize Protein Data — normalize_protein_data","text":"Normalize Protein Data","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/normalize_protein_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Protein Data — normalize_protein_data","text":"","code":"normalize_protein_data(   sce,   metadata,   method = \"dsb\",   detect_IgG = TRUE,   num_components_to_keep = NULL,   background_droplets )"},{"path":"https://bowmanr.github.io/scDNA/reference/normalize_protein_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Protein Data — normalize_protein_data","text":"NGT","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/optimize_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — optimize_matrix","title":"Title — optimize_matrix","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/optimize_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — optimize_matrix","text":"","code":"optimize_matrix(sce, sensitivity_threshold = c(0.01, 0.001))"},{"path":"https://bowmanr.github.io/scDNA/reference/optimize_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — optimize_matrix","text":"sce sce file sensitivity_threshold vector sensitivity thresholds rows (variants) columns (cells)","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/quality_output.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce long form quality metrics for each cell-variant pair for read depth, allele frequency, and genotype quality — quality_output","title":"Produce long form quality metrics for each cell-variant pair for read depth, allele frequency, and genotype quality — quality_output","text":"Produce long form quality metrics cell-variant pair read depth, allele frequency, genotype quality","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/quality_output.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce long form quality metrics for each cell-variant pair for read depth, allele frequency, and genotype quality — quality_output","text":"","code":"quality_output(   file,   filter = TRUE,   input_variants,   input_cells,   NGT,   DP_cut = 10,   AF_cut = 20,   GQ_cut = 20 )"},{"path":"https://bowmanr.github.io/scDNA/reference/quality_output.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce long form quality metrics for each cell-variant pair for read depth, allele frequency, and genotype quality — quality_output","text":"file path H5 file filter default=TRUE, determines whether function output filtered unfiltered long form matrix containing per cell-variant pair NGT, DP, AF, GQ metrics input_variants variants interest collect QC data input_cells cells interest subset NGT NGT matrix DP_cut read depth cutoff AF_cut allele frequency cutoff GQ_cut genotype quality cutoff","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/quality_output.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce long form quality metrics for each cell-variant pair for read depth, allele frequency, and genotype quality — quality_output","text":"filtered NGT matrix containing NAs cells pass QC","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/readDNA_CN_H5.html","id":null,"dir":"Reference","previous_headings":"","what":"This function generates the Copy Number by determining the ploidy of each mutation — readDNA_CN_H5","title":"This function generates the Copy Number by determining the ploidy of each mutation — readDNA_CN_H5","text":"function generates Copy Number determining ploidy mutation","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/readDNA_CN_H5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function generates the Copy Number by determining the ploidy of each mutation — readDNA_CN_H5","text":"","code":"readDNA_CN_H5(sce, reference_cells = NULL)"},{"path":"https://bowmanr.github.io/scDNA/reference/readDNA_CN_H5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function generates the Copy Number by determining the ploidy of each mutation — readDNA_CN_H5","text":"sce single cell experiment object reference_cells set cells used determine allele dropout false postive rates","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/select_clones.html","id":null,"dir":"Reference","previous_headings":"","what":"Select clones of interest on the basis QC metrics — select_clones","title":"Select clones of interest on the basis QC metrics — select_clones","text":"Select clones interest basis QC metrics","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/select_clones.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Select clones of interest on the basis QC metrics — select_clones","text":"","code":"select_clones(   sce,   ADO_cut = 0.1,   GQ_cut = 30,   DP_cut = 10,   select_exact = FALSE )"},{"path":"https://bowmanr.github.io/scDNA/reference/select_clones.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Select clones of interest on the basis QC metrics — select_clones","text":"sce SingleCellExperiment object containing Clones,Architecture, NGT matrix ADO_cut maximum median allele dropout GQ_cut mimimum median gene quality score DP_cut minimum median sequencing depth select_exact default=FALSE, can supply vector clones interest bypass QC filtering","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/select_clones.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Select clones of interest on the basis QC metrics — select_clones","text":"subset sce object","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/tabulate_mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — tabulate_mutations","title":"Title — tabulate_mutations","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/tabulate_mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — tabulate_mutations","text":"","code":"tabulate_mutations(file, GT_cutoff = 0, VAF_cutoff = 0)"},{"path":"https://bowmanr.github.io/scDNA/reference/tabulate_mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — tabulate_mutations","text":"file  GT_cutoff  VAF_cutoff","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/tapestri_h5_to_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Tapestri H5 data and extract genotype matrix — tapestri_h5_to_sce","title":"Import Tapestri H5 data and extract genotype matrix — tapestri_h5_to_sce","text":"Import Tapestri H5 data extract genotype matrix","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/tapestri_h5_to_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Tapestri H5 data and extract genotype matrix — tapestri_h5_to_sce","text":"","code":"tapestri_h5_to_sce(   file,   GT_cutoff = 35,   VAF_cutoff = 5,   DP_cutoff = 10,   GQ_cutoff = 30,   AF_cutoff = 25,   variant_set = NULL,   demultiplex_cells = NULL,   protein = TRUE )"},{"path":"https://bowmanr.github.io/scDNA/reference/tapestri_h5_to_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Tapestri H5 data and extract genotype matrix — tapestri_h5_to_sce","text":"file path h5 file GT_cutoff Fraction cells successfully genotyped initial filtering (default 0.2, meaning 20%) VAF_cutoff Fraction cells mutated initial filtering variants (default 0.005, meaning 0.05%) DP_cutoff minimum number reads necessary reliable genotype call single cell (default: 10) GQ_cutoff minimum genotype quality necessary reliable genotype call single cell (default: 30) AF_cutoff Deviation 0, 50, 100% reliable call WT, Het Hom respectively (default: 25) variant_set character vector variants included format output mission bio. demultiplex_cells parameter demultiplexing cell names use, often set NULL protein logical, whether protein data included. default=TRUE return_variants_only logical,","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/tapestri_h5_to_sce.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Tapestri H5 data and extract genotype matrix — tapestri_h5_to_sce","text":"single cell experiment object containing genotyping matrix, allele frequency table, annotation table,","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Run Trajectory Analysis after extraction from SingleCellExperiment object — trajectory_analysis","title":"Run Trajectory Analysis after extraction from SingleCellExperiment object — trajectory_analysis","text":"Run Trajectory Analysis extraction SingleCellExperiment object","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run Trajectory Analysis after extraction from SingleCellExperiment object — trajectory_analysis","text":"","code":"trajectory_analysis(sce, use_ADO = TRUE)"},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run Trajectory Analysis after extraction from SingleCellExperiment object — trajectory_analysis","text":"sce SingleCellExperiment Object","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run Trajectory Analysis after extraction from SingleCellExperiment object — trajectory_analysis","text":"RL_analysis returns paths metadata mutation order","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_of_interest_BSCITE_format.html","id":null,"dir":"Reference","previous_headings":"","what":"BSCITE Style single trajectory Plot — trajectory_of_interest_BSCITE_format","title":"BSCITE Style single trajectory Plot — trajectory_of_interest_BSCITE_format","text":"BSCITE Style single trajectory Plot","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_of_interest_BSCITE_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BSCITE Style single trajectory Plot — trajectory_of_interest_BSCITE_format","text":"","code":"trajectory_of_interest_BSCITE_format(   sce,   trajectory = sce@metadata$Trajectories[[1]],   save_filename = NULL )"},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_of_interest_BSCITE_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BSCITE Style single trajectory Plot — trajectory_of_interest_BSCITE_format","text":"sce SingleCellExperiment object containing NGT matrix clone identification. trajectory Put entire Trajectory interested 'sce()metadata$Trajectories[1]' save_filename file location save file. Currently, must end .html extension.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_of_interest_figure.html","id":null,"dir":"Reference","previous_headings":"","what":"Individual trajectory of interest Plots — trajectory_of_interest_figure","title":"Individual trajectory of interest Plots — trajectory_of_interest_figure","text":"Individual trajectory interest Plots","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_of_interest_figure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Individual trajectory of interest Plots — trajectory_of_interest_figure","text":"","code":"trajectory_of_interest_figure(   sce,   trajectory = sce@metadata$Trajectories[[1]],   save_filename = NULL )"},{"path":"https://bowmanr.github.io/scDNA/reference/trajectory_of_interest_figure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Individual trajectory of interest Plots — trajectory_of_interest_figure","text":"sce SingleCellExperiment object containing NGT matrix clone identification. trajectory Put entire Trajectory interested 'sce metadata$Trajectories[1]' save_filename file location save file. Currently, must end .html extension.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/variant_ID.html","id":null,"dir":"Reference","previous_headings":"","what":"Variant identification and frequency tallies The DNA variants for each cell are pulled from the specified H5 files. Each variant for each cell is genotyped to be WildType, Heterozygous, Homozygous or Missing. The genotyping rate is determined by taking WT+Het+Hom over total cell calls (including missing). The VAF is determined by number of allele copies we see in a weighted sum. A filter is applied to both of these calculatins to include or exclude variants of interest. These are then annotated to include the variant information such as gene name, nucleotide location, and short amino acid changes. — variant_ID","title":"Variant identification and frequency tallies The DNA variants for each cell are pulled from the specified H5 files. Each variant for each cell is genotyped to be WildType, Heterozygous, Homozygous or Missing. The genotyping rate is determined by taking WT+Het+Hom over total cell calls (including missing). The VAF is determined by number of allele copies we see in a weighted sum. A filter is applied to both of these calculatins to include or exclude variants of interest. These are then annotated to include the variant information such as gene name, nucleotide location, and short amino acid changes. — variant_ID","text":"Variant identification frequency tallies DNA variants cell pulled specified H5 files. variant cell genotyped WildType, Heterozygous, Homozygous Missing. genotyping rate determined taking WT+Het+Hom total cell calls (including missing). VAF determined number allele copies see weighted sum. filter applied calculatins include exclude variants interest. annotated include variant information gene name, nucleotide location, short amino acid changes.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/variant_ID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Variant identification and frequency tallies The DNA variants for each cell are pulled from the specified H5 files. Each variant for each cell is genotyped to be WildType, Heterozygous, Homozygous or Missing. The genotyping rate is determined by taking WT+Het+Hom over total cell calls (including missing). The VAF is determined by number of allele copies we see in a weighted sum. A filter is applied to both of these calculatins to include or exclude variants of interest. These are then annotated to include the variant information such as gene name, nucleotide location, and short amino acid changes. — variant_ID","text":"","code":"variant_ID(   file,   panel = NULL,   GT_cutoff = 0,   VAF_cutoff = 0,   demultiplexed = NULL )"},{"path":"https://bowmanr.github.io/scDNA/reference/variant_ID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Variant identification and frequency tallies The DNA variants for each cell are pulled from the specified H5 files. Each variant for each cell is genotyped to be WildType, Heterozygous, Homozygous or Missing. The genotyping rate is determined by taking WT+Het+Hom over total cell calls (including missing). The VAF is determined by number of allele copies we see in a weighted sum. A filter is applied to both of these calculatins to include or exclude variants of interest. These are then annotated to include the variant information such as gene name, nucleotide location, and short amino acid changes. — variant_ID","text":"file path h5 file panel name prebuilt panel/txdb GT_cutoff Fraction cells successfully genotyped initial filtering (default 0.2, meaning 20%) VAF_cutoff Fraction cells mutated initial filtering variants (default 0.005, meaning 0.05%) demultiplexed cell cluster dataframe, often set NULL","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/variant_ID.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Variant identification and frequency tallies The DNA variants for each cell are pulled from the specified H5 files. Each variant for each cell is genotyped to be WildType, Heterozygous, Homozygous or Missing. The genotyping rate is determined by taking WT+Het+Hom over total cell calls (including missing). The VAF is determined by number of allele copies we see in a weighted sum. A filter is applied to both of these calculatins to include or exclude variants of interest. These are then annotated to include the variant information such as gene name, nucleotide location, and short amino acid changes. — variant_ID","text":"dataframe variant row, tally number cells WT, Het, Hom missing mutation. Calculated VAF gentoyping frequency also provided. multiple samples present h5 file, list object returned sample entry list","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_WT_dominant_clone.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — visualize_WT_dominant_clone","title":"Title — visualize_WT_dominant_clone","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_WT_dominant_clone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — visualize_WT_dominant_clone","text":"","code":"visualize_WT_dominant_clone(sce)"},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_WT_dominant_clone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — visualize_WT_dominant_clone","text":"sce","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_all_WT_dominant_clone.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — visualize_all_WT_dominant_clone","title":"Title — visualize_all_WT_dominant_clone","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_all_WT_dominant_clone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — visualize_all_WT_dominant_clone","text":"","code":"visualize_all_WT_dominant_clone(sce)"},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_all_WT_dominant_clone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — visualize_all_WT_dominant_clone","text":"sce","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_any_optimal_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — visualize_any_optimal_path","title":"Title — visualize_any_optimal_path","text":"Title","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_any_optimal_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — visualize_any_optimal_path","text":"","code":"visualize_any_optimal_path(sce, start_name, goal_name)"},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_any_optimal_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — visualize_any_optimal_path","text":"sce  start_name  goal_name","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_full_network.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize Full Network — visualize_full_network","title":"Visualize Full Network — visualize_full_network","text":"Visualize Full Network","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_full_network.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize Full Network — visualize_full_network","text":"","code":"visualize_full_network(sce, save_filename = NULL)"},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_full_network.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize Full Network — visualize_full_network","text":"sce SingleCellExperiment object containing NGT matrix clone identification. save_filename file location save file. Currently, must end .html extension.","code":""},{"path":"https://bowmanr.github.io/scDNA/reference/visualize_full_network.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize Full Network — visualize_full_network","text":"interactive Reinforcement Learning Trajectory","code":""}]
